SQL> Spool
currently spooling to D://Plsql.txt
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  num1 number := 10;
  3  num2 number := 20;
  4  BEGIN
  5  DECLARE
  6  num_addition number;
  7  BEGIN
  8  num_addition := num1 + num2;
  9  dbms_output.put_line('Addition is: ' || num_addition);
 10  END;  -- End of access num_addition variable
 11  END;
 12  /
Addition is: 30                                                                 

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  pi CONSTANT REAL := 3.14159;
  3    radius REAL := 3;
  4    area REAL := (pi * radius**2);
  5  BEGIN
  6  dbms_output.put_line(' PI: ' || pi || ' Radius: ' || radius);
  7  dbms_output.put_line(' Area: ' || area);
  8  END;
  9  /
PI: 3.14159 Radius: 3                                                           
Area: 28.27431                                                                  

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  eno number(5) NOT NULL := 2
  3  ename varchar2(15) := 'Branson Devs';
  4  edept CONSTANT varchar2(15) := 'Web Developer';
  5  BEGIN
  6  dbms_output.put_line('Declared Value:');
  7  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
  8  dbms_output.put_line('Constant Declared:');
  9  dbms_output.put_line(' Employee Department: ' || edept);
 10  END;
 11  /
ename varchar2(15) := 'Branson Devs';
*
ERROR at line 3:
ORA-06550: line 3, column 1: 
PLS-00103: Encountered the symbol "ENAME" when expecting one of the following: 
* & = - + ; < / > at in is mod remainder not rem 
<an exponent (**)> <> or != or ~= >= <= <> and or like like2 
like4 likec between || multiset member submultiset 
The symbol ";" was substituted for "ENAME" to continue. 


SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  
  3  eno number(5) NOT NULL := 2; --assign value into eno variable
  4  
  5  ename varchar2(15) := 'Branson Devs';
  6  
  7  /* Constant value is fixed for edept value is "Web Deloper"
  8  is fixed all program not required declare all times. */
  9  edept CONSTANT varchar2(15) := 'Web Developer';
 10  BEGIN
 11  dbms_output.put_line('Declared Value:');
 12  dbms_output.put_line(' Employee Number: ' || eno || ' Employee Name: ' || ename);
 13  dbms_output.put_line('Constant Declared:');
 14  dbms_output.put_line(' Employee Department: ' || edept);
 15  END;
 16  /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> 
SQL> dbms_output.put_line('Constant Declared:');
SP2-0734: unknown command beginning "dbms_outpu..." - rest of line ignored.
SQL> dbms_output.put_line(' Employee Department: ' || edept);
SP2-0734: unknown command beginning "dbms_outpu..." - rest of line ignored.
SQL> END;
SP2-0042: unknown command "END" - rest of line ignored.
SQL> /
Declared Value:                                                                 
Employee Number: 2 Employee Name: Branson Devs                                  
Constant Declared:                                                              
Employee Department: Web Developer                                              

PL/SQL procedure successfully completed.

SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2     no INTEGER(2) := 14;
  3  BEGIN
  4     IF ( no = 14 ) THEN
  5        DBMS_OUTPUT.PUT_LINE('condition true');
  6     END IF;
  7  END;
  8  /
condition true                                                                  

PL/SQL procedure successfully completed.

SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2     no INTEGER(2) := 14;
  3  BEGIN
  4     IF ( no = 11 ) THEN
  5        DBMS_OUTPUT.PUT_LINE(no || ' is same');
  6     ELSE
  7        DBMS_OUTPUT.PUT_LINE(no || ' is not same');
  8     END IF;
  9  END;
 10  /
14 is not same                                                                  

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2     no NUMBER := 0;
  3  BEGIN
  4  WHILE no < 10 LOOP
  5      no := no + 1;
  6      END LOOP;
  7      DBMS_OUTPUT.PUT_LINE('Sum :' || no);
  8  END;
  9  /
Sum :10                                                                         

PL/SQL procedure successfully completed.

SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2     no NUMBER := 0;
  3  BEGIN
  4  FOR no IN 1 .. 5 LOOP
  5      DBMS_OUTPUT.PUT_LINE('Iteration : ' || no);
  6  CONTINUE WHEN no = 4
  7  DBMS_OUTPUT.PUT_LINE('CONTINUE WHEN EXECUTE Iteration : ' || no);
  8    END LOOP;
  9  END;
 10  /
DBMS_OUTPUT.PUT_LINE('CONTINUE WHEN EXECUTE Iteration : ' || no);
*
ERROR at line 7:
ORA-06550: line 7, column 1: 
PLS-00103: Encountered the symbol "DBMS_OUTPUT" when expecting one of the 
following: 
* & - + ; / at mod remainder rem <an exponent (**)> and or || 
multiset 
The symbol "*" was substituted for "DBMS_OUTPUT" to continue. 


SQL> 
SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2  a number := 7;
  3  BEGIN
  4  CASE a
  5  WHEN 1 THEN
  6  DBMS_OUTPUT.PUT_LINE('value 1');
  7  WHEN 2 THEN
  8  DBMS_OUTPUT.PUT_LINE('value 2');
  9  WHEN 3 THEN
 10  DBMS_OUTPUT.PUT_LINE('value 3');
 11  ELSE
 12  DBMS_OUTPUT.PUT_LINE('no matching CASE found');
 13  END CASE;
 14  END;
 15  /
no matching CASE found                                                          

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> edit explicit_cursor

SQL> DECLARE
  2  cursor c is select * from emp_information
  3  where emp_name='bhavesh';
  4  tmp emp_information%rowtype;
  5  BEGIN
  6  OPEN c;
  7  Loop exit when c%NOTFOUND;
  8  FETCH c into tmp;
  9  update emp_information set tmp.emp_dept='Web Developer'
 10  where tmp.emp_name='Saulin';
 11  END Loop;
 12  IF c%ROWCOUNT>0 THEN
 13  dbms_output.put_line(SQL%ROWCOUNT||' Rows Updated');
 14  ELSE
 15  dbms_output.put_line('NO Rows Updated Found');
 16  END IF;
 17  CLOSE c;
 18  END;
 19  /
cursor c is select * from emp_information
                          *
ERROR at line 2:
ORA-06550: line 2, column 27: 
PL/SQL: ORA-00942: table or view does not exist 
ORA-06550: line 2, column 13: 
PL/SQL: SQL Statement ignored 
ORA-06550: line 4, column 5: 
PLS-00201: identifier 'EMP_INFORMATION' must be declared 
ORA-06550: line 4, column 5: 
PL/SQL: Item ignored 
ORA-06550: line 8, column 14: 
PLS-00320: the declaration of the type of this expression is incomplete or 
malformed 
ORA-06550: line 8, column 1: 
PL/SQL: SQL Statement ignored 
ORA-06550: line 9, column 8: 
PL/SQL: ORA-00942: table or view does not exist 
ORA-06550: line 9, column 1: 
PL/SQL: SQL Statement ignored 


SQL> SET SERVEROUTPUT ON
SQL> DECLARE    a number;    b number;    c number;
  2  PROCEDURE findMin(x IN number, y IN number, z OUT number) IS BEGIN
  3     IF x < y THEN       z:= x;    ELSE       z:= y;
  4     END IF;
  5  END;
  6  BEGIN    a:= 23;    b:= 45;    findMin(a, b, c);    dbms_output.put_line(' Minimum of (23, 45) : ' || c); END;
  7  /
Minimum of (23, 45) : 23                                                        

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE    a number;
  2  PROCEDURE squareNum(x IN OUT number) IS BEGIN
  3    x := x * x;
  4  END; BEGIN    a:= 23;    squareNum(a);    dbms_output.put_line(' Square of (23): ' || a); END;
  5  /
Square of (23): 529                                                             

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE
  2     c number(2); BEGIN
  3     c := totalCustomers();    dbms_output.put_line('Total no. of Customers: ' || c); END;
  4  /
   c := totalCustomers();    dbms_output.put_line('Total no. of Customers: ' || c); END;
        *
ERROR at line 3:
ORA-06550: line 3, column 9: 
PLS-00905: object HR.TOTALCUSTOMERS is invalid 
ORA-06550: line 3, column 4: 
PL/SQL: Statement ignored 


SQL> SET SERVEROUTPUT ON
SQL> DECLARE    a number;    b number;    c number;
  2  FUNCTION findMax(x IN number, y IN number)
  3  RETURN number IS
  4      z number;
  5  BEGIN
  6     IF x > y THEN       z:= x;    ELSE
  7        Z:= y;    END IF;
  8     RETURN z;
  9  END; BEGIN    a:= 23;    b:= 45;
 10     c := findMax(a, b);    dbms_output.put_line(' Maximum of (23,45): ' || c); END;
 11  /
Maximum of (23,45): 45                                                          

PL/SQL procedure successfully completed.

SQL> SET SERVEROUTPUT ON
SQL> DECLARE    num number;    factorial number;
  2  FUNCTION fact(x number)
  3  RETURN number IS
  4     f number; BEGIN
  5     IF x=0 THEN       f := 1;    ELSE
  6        f := x * fact(x-1);
  7     END IF;
  8  RETURN f; END;
  9  BEGIN    num:= 6;    factorial := fact(num);    dbms_output.put_line(' Factorial '|| num || ' is ' || factorial); END;
 10  /
Factorial 6 is 720                                                              

PL/SQL procedure successfully completed.

SQL> spool off
